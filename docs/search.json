[{"path":"https://iobis.github.io/ednagaps/articles/global.html","id":"reference-databases","dir":"Articles","previous_headings":"","what":"Reference databases","title":"A global gap analysis for the eDNA Expeditions reference databases","text":"Reference database creation documented https://github.com/iobis/eDNA_trial_data, reference databases downloaded reference_databases LifeWatch server using:","code":"rsync -avrm --partial --progress --include='*/' --include='*pga_tax.tsv' --include='*pga_taxa.tsv' --include='*pga_taxon.tsv' --exclude='*' ubuntu@lfw-ds001-i035.i.lifewatch.dev:/home/ubuntu/data/databases/ ./reference_databases rm -r ./reference_databases/silva*"},{"path":"https://iobis.github.io/ednagaps/articles/global.html","id":"species-lists","dir":"Articles","previous_headings":"Reference databases","what":"Species lists","title":"A global gap analysis for the eDNA Expeditions reference databases","text":"Use ednagaps package WoRMS aligned species lists marker. read generated lists add higher level taxonomic groups:","code":"library(ednagaps) library(dplyr) library(DBI) library(sf) library(leaflet) library(ggplot2) library(glue) reference_databases <- list(   \"12s_mimammal\" = list(     taxa = \"~/Desktop/temp/reference_databases/12S/202311/12S_mammal_ncbi_1_50000_pcr_pga_taxa.tsv\"   ),   \"12s_mifish\" = list(     taxa = \"~/Desktop/temp/reference_databases/12S/202311/12S_mito_ncbi_1_50000_mifish_pcr_pga_taxa.tsv\"   ),   \"12s_teleo\" = list(     taxa = \"~/Desktop/temp/reference_databases/12S/202311/12S_mito_ncbi_1_50000_teleo_pcr_pga_taxa.tsv\"   ),   \"coi\" = list(     taxa = \"~/Desktop/temp/reference_databases/COI_ncbi/COI_ncbi_1_50000_pcr_pga_taxon.tsv\"   ),   \"16s\" = list(     taxa = \"~/Desktop/temp/reference_databases/16S/202311/16S_ncbi_euk_1_50000_pga_taxa.tsv\"   ) )  generate_reference_species(reference_databases) reference_species <- read_reference_species() reference_species #> # A tibble: 125,437 × 12 #>    marker       phylum   class    order family genus species isMarine isBrackish #>    <chr>        <chr>    <chr>    <chr> <chr>  <chr> <chr>      <dbl>      <dbl> #>  1 12s_mimammal Chordata Teleost… Perc… Serra… Cent… Centro…        1          0 #>  2 12s_mimammal Chordata NA       Test… Trion… Pelo… Pelodi…        0          0 #>  3 12s_mimammal Chordata Mammalia Arti… Bovid… Bos   Bos ta…       NA         NA #>  4 12s_mimammal Chordata Mammalia Carn… Phoci… Mona… Monach…        1         NA #>  5 12s_mimammal Chordata Mammalia Carn… Otari… Arct… Arctoc…        1         NA #>  6 12s_mimammal Chordata Teleost… Cent… Kypho… Kyph… Kyphos…        1          0 #>  7 12s_mimammal Chordata Teleost… Cent… Kypho… Gire… Girell…        1          0 #>  8 12s_mimammal Chordata Teleost… Cypr… Cypri… Ache… Acheil…        0          1 #>  9 12s_mimammal Chordata Teleost… Cypr… Cypri… Ache… Acheil…        0          1 #> 10 12s_mimammal Chordata Teleost… Perc… Anarh… Anar… Anarrh…        1          0 #> # ℹ 125,427 more rows #> # ℹ 3 more variables: isFreshwater <dbl>, isTerrestrial <dbl>, input <chr>"},{"path":"https://iobis.github.io/ednagaps/articles/global.html","id":"occurrence-data","dir":"Articles","previous_headings":"Reference databases","what":"Occurrence data","title":"A global gap analysis for the eDNA Expeditions reference databases","text":"H3 gridded occurrence data read custom SQLite database:","code":"con <- dbConnect(RSQLite::SQLite(), \"~/Desktop/protectedseas/database.sqlite\")  res <- dbSendQuery(con, \"   select phylum, class, \\\"order\\\", species, h3.h3_2 as h3 from occurrence   left join species on species.scientificname = occurrence.species   left join h3 on occurrence.h3 = h3.h3_7   where phylum is not null   group by phylum, class, \\\"order\\\", species, h3.h3_2 \") gridded_occurrences <- dbFetch(res) %>%    add_groups() %>%   as_tibble()  dbClearResult(res) dbDisconnect(con)  gridded_occurrences #> # A tibble: 2,855,810 × 6 #>    phylum         class            order              species        h3    group #>    <chr>          <chr>            <chr>              <chr>          <chr> <chr> #>  1 Acanthocephala Eoacanthocephala Gyracanthocephala  Acanthogyrus … 8297… NA    #>  2 Acanthocephala Eoacanthocephala Gyracanthocephala  Pallisentis (… 823d… NA    #>  3 Acanthocephala Eoacanthocephala Neoechinorhynchida Atactorhynchu… 822b… NA    #>  4 Acanthocephala Eoacanthocephala Neoechinorhynchida Atactorhynchu… 8244… NA    #>  5 Acanthocephala Eoacanthocephala Neoechinorhynchida Atactorhynchu… 8244… NA    #>  6 Acanthocephala Eoacanthocephala Neoechinorhynchida Atactorhynchu… 8244… NA    #>  7 Acanthocephala Eoacanthocephala Neoechinorhynchida Atactorhynchu… 8244… NA    #>  8 Acanthocephala Eoacanthocephala Neoechinorhynchida Atactorhynchu… 8244… NA    #>  9 Acanthocephala Eoacanthocephala Neoechinorhynchida Atactorhynchu… 8244… NA    #> 10 Acanthocephala Eoacanthocephala Neoechinorhynchida Atactorhynchu… 8245… NA    #> # ℹ 2,855,800 more rows"},{"path":[]},{"path":"https://iobis.github.io/ednagaps/articles/global.html","id":"completeness-by-group-and-marker","dir":"Articles","previous_headings":"Reference databases > Analysis","what":"Completeness by group and marker","title":"A global gap analysis for the eDNA Expeditions reference databases","text":"","code":"stats <- gridded_occurrences %>%   group_by(group, species) %>%   summarize() %>%    left_join(reference_species %>% select(marker, species), by = \"species\") %>%   group_by(group) %>%   mutate(     group_species = n_distinct(species),     group_species_in_reference = n_distinct(species[!is.na(marker)])   ) %>%   group_by(group, group_species, group_species_in_reference, marker) %>%   summarize(     group_marker_species = n_distinct(species)   ) %>%   ungroup() %>%    mutate(fraction = group_marker_species / group_species) %>%   filter(!is.na(marker) & !is.na(group))  stats_combined <- stats %>%   group_by(group) %>%    filter(row_number() == 1) %>%   mutate(     marker = \"combined\",     fraction = group_species_in_reference / group_species   )  stats <- bind_rows(stats, stats_combined)  ggplot() +   geom_point(data = stats, aes(x = fraction, y = group, color = marker, shape = marker), size = 3) +   theme_minimal() +   theme(panel.grid.minor.x = element_blank()) +   scale_color_brewer(palette = \"Paired\")"},{"path":"https://iobis.github.io/ednagaps/articles/global.html","id":"maps","dir":"Articles","previous_headings":"Reference databases > Analysis","what":"Maps","title":"A global gap analysis for the eDNA Expeditions reference databases","text":"Join gridded occurrences reference species lists calculate completeness group cell:","code":"grid_markers <- gridded_occurrences %>%   select(h3, species, group) %>%   left_join(reference_species %>% select(marker, species), by = \"species\") %>%   group_by(h3, group) %>%   mutate(     group_species = n_distinct(species),     group_species_in_reference = n_distinct(species[!is.na(marker)])   ) %>%   group_by(h3, group, group_species, group_species_in_reference, marker) %>%   summarize(     group_marker_species = n_distinct(species)   ) %>%   ungroup()  grid_markers %>% filter(group == \"fish\" & h3 == \"82000ffffffffff\") #> # A tibble: 6 × 6 #>   h3      group group_species group_species_in_ref…¹ marker group_marker_species #>   <chr>   <chr>         <int>                  <int> <chr>                 <int> #> 1 82000f… fish             44                     39 12s_m…                   32 #> 2 82000f… fish             44                     39 12s_m…                   32 #> 3 82000f… fish             44                     39 12s_t…                   33 #> 4 82000f… fish             44                     39 16s                      31 #> 5 82000f… fish             44                     39 coi                      39 #> 6 82000f… fish             44                     39 NA                        5 #> # ℹ abbreviated name: ¹​group_species_in_reference land <- rnaturalearth::ne_countries(scale = \"medium\", returnclass = \"sf\")  make_map <- function(selected_group, selected_marker) {   map_grid <- grid_markers %>%     filter(group == selected_group & marker == selected_marker) %>%     mutate(fraction = group_marker_species / group_species) %>%     select(h3, group_species, group_marker_species, fraction) %>%     mutate(geometry = h3jsr::cell_to_polygon(h3)) %>%     st_as_sf() %>%     st_wrap_dateline(options = c(\"WRAPDATELINE=YES\", \"DATELINEOFFSET=180\"))      ggplot() +     geom_sf(data = map_grid, aes(fill = fraction)) +     geom_sf(data = land, fill = \"white\", color = \"black\") +     scale_fill_gradientn(colours = c(\"#7d1500\", \"#da4325\", \"#eca24e\", \"#e7e2bc\", \"#5cc3af\", \"#0a6265\"), values = seq(0, 1, 0.2)) +     coord_sf(crs = st_crs(\"+proj=robin +lon_0=0 +x_0=0 +y_0=0 +ellps=WGS84 +datum=WGS84 +units=m +no_defs\")) +     ggtitle(glue(\"Reference database ({selected_marker}) completeness for {selected_group}\")) +     theme_void() +     theme(plot.title = element_text(hjust = 0.5)) }  make_map(\"fish\", \"12s_mifish\") make_map(\"fish\", \"12s_mimammal\") make_map(\"fish\", \"12s_teleo\") make_map(\"fish\", \"coi\") make_map(\"fish\", \"16s\")"},{"path":"https://iobis.github.io/ednagaps/articles/species_identity.html","id":"dependencies","dir":"Articles","previous_headings":"","what":"Dependencies","title":"Species sequence identity in the eDNA Expeditions reference databases","text":"","code":"library(ednagaps) library(dplyr) library(Biostrings) library(msa) library(ggmsa) library(ggdist) library(ggplot2) library(glue) library(purrr)"},{"path":"https://iobis.github.io/ednagaps/articles/species_identity.html","id":"reference-databases","dir":"Articles","previous_headings":"","what":"Reference databases","title":"Species sequence identity in the eDNA Expeditions reference databases","text":"Reference database creation documented https://github.com/iobis/eDNA_trial_data, reference databases downloaded reference_databases LifeWatch server using: use function ednagaps package generate WoRMS aligned species lists marker. need accepted WoRMS taxonomy reliably determine sequences species .","code":"rsync -avrm --partial --progress --include='*/' --include='*pga_tax.tsv' --include='*pga_taxa.tsv' --include='*pga_taxon.tsv' --exclude='*' ubuntu@lfw-ds001-i035.i.lifewatch.dev:/home/ubuntu/data/databases/ ./reference_databases rm -r ./reference_databases/silva* reference_databases <- list(   \"12s_mimammal\" = list(     taxa = \"~/Desktop/edna-reference-databases/12s_ncbi_mimammal_pga_taxa.tsv\",     sequences = \"~/Desktop/edna-reference-databases/12s_ncbi_mimammal_pga.fasta\"   ),   \"12s_mifish\" = list(     taxa = \"~/Desktop/edna-reference-databases/12s_ncbi_mifish_pga_taxa.tsv\",     sequences = \"~/Desktop/edna-reference-databases/12s_ncbi_mifish_pga.fasta\"   ),   \"12s_teleo\" = list(     taxa = \"~/Desktop/edna-reference-databases/12s_ncbi_teleo_pga_taxa.tsv\",     sequences = \"~/Desktop/edna-reference-databases/12s_ncbi_teleo_pga.fasta\"   ),   \"coi\" = list(     taxa = \"~/Desktop/edna-reference-databases/coi_ncbi_pga_taxa.tsv\",     sequences = \"~/Desktop/edna-reference-databases/coi_ncbi_pga.fasta\"   ),   \"16s\" = list(     taxa = \"~/Desktop/edna-reference-databases/16s_ncbi_pga_taxa.tsv\",     sequences = \"~/Desktop/edna-reference-databases/16s_ncbi_pga.fasta\"   ) ) generate_reference_species(reference_databases)"},{"path":"https://iobis.github.io/ednagaps/articles/species_identity.html","id":"analysis","dir":"Articles","previous_headings":"","what":"Analysis","title":"Species sequence identity in the eDNA Expeditions reference databases","text":"First read reference databases, join accepted WoRMS taxonomy. Sequences without accepted WoRMS name marine brackish flag retained.  function writes set sequences fasta, performs blast sequences sequences, returns results. results filtered remove self-alignments, query coverage calculated. Now process sequences marker genus. select maximum 10 sequences per species. Results written storr cache per marker. Finally, read results storr cache visualize results, filtering minimum query cover 90%. sequence identities within species versus species genus.  can now calculate cutoff values clustering based within species sequence identity. shows cutoff lower COI 12S.","code":"input_taxonomy <- read_input_taxonomy() %>%   filter(rank == \"Species\" & (isMarine == 1 | isBrackish == 1)) %>%    select(input, phylum, class, order, family, genus, species = scientificname) #> Warning: One or more parsing issues, call `problems()` on your data frame for details, #> e.g.: #>   dat <- vroom(...) #>   problems(dat)  db <- read_reference_databases(reference_databases) %>%    filter(!is.na(species)) %>%    select(marker, seqid, sequence, input = species) %>%    inner_join(input_taxonomy, by = \"input\", keep = FALSE) #>  ■■■■■■■■■■■■■■■■■■■■■■■■■         80% |  ETA: 24s ggplot() +   geom_boxplot(data = db, aes(x = marker, y = nchar(sequence)), alpha = 0.5) +   facet_wrap(~marker, scales = \"free\") +   ggtitle(\"Sequence length\") align <- function(sequences) {   sequence_lengths <- data.frame(query_acc_ver = sequences$seqid, sequence_length = nchar(sequences$sequence))   seqinr::write.fasta(as.list(sequences$sequence), file.out = \"sequences.fasta\", names = sequences$seqid, as.string = TRUE)   result <- tryCatch({     pipe(glue(\"blastn -query sequences.fasta -subject sequences.fasta -word_size 11 -dust no -outfmt 6\")) %>%       read.table() %>%       setNames(c(\"query_acc_ver\", \"subject_acc_ver\", \"perc_identity\", \"alignment_length\", \"mismatches\", \"gap_opens\", \"q_start\", \"q_end\", \"s_start\", \"s_end\", \"evalue\", \"bit_score\"))   }, error = function(err) {     message(err)   })   file.remove(\"sequences.fasta\")   result %>%     filter(query_acc_ver != subject_acc_ver) %>%     mutate(combined = paste0(pmin(query_acc_ver, subject_acc_ver), \"_\", pmax(query_acc_ver, subject_acc_ver))) %>%     distinct(combined, .keep_all = TRUE) %>%      left_join(sequence_lengths, by = \"query_acc_ver\") %>%      mutate(query_cover = (q_end - q_start + 1) / sequence_length * 100) } max_sequences_per_species <- 10  for (selected_marker in names(reference_databases)) {   message(selected_marker)   st <- storr::storr_rds(glue(\"~/Desktop/temp/storr_{selected_marker}\"))    for (selected_genus in sort(unique(db$genus))) {     message(selected_genus)     if (!st$exists(selected_genus)) {       sequences_genus <- db %>%          filter(marker == selected_marker & genus == selected_genus) %>%          group_by(species) %>%          slice_sample(n = max_sequences_per_species) %>%          arrange(genus, species)       if (nrow(sequences_genus) < 2) next()       genus_results <- align(sequences_genus) %>%         select(query_acc_ver, subject_acc_ver, perc_identity, alignment_length, query_cover) %>%         left_join(sequences_genus %>% select(seqid, species1 = species), by = c(\"query_acc_ver\" = \"seqid\")) %>%          left_join(sequences_genus %>% select(seqid, species2 = species), by = c(\"subject_acc_ver\" = \"seqid\")) %>%          mutate(same_species = species1 == species2) %>%         mutate(genus = selected_genus)       st$set(selected_genus, genus_results)     }   } } min_query_cover <- 90  results <- map(names(reference_databases), function(selected_marker) {   storr_path <- glue(\"~/Desktop/temp/storr_{selected_marker}\")   if (!file.exists(storr_path)) return(NULL)   st <- storr::storr_rds(storr_path)   map(st$list(), st$get) %>%      bind_rows() %>% mutate(marker = selected_marker)  }) %>% bind_rows()  ggplot(results %>% filter(query_cover >= min_query_cover)) +   stat_halfeye(aes(x = same_species, y = perc_identity, fill = same_species), justification = -0.2, .width = 0, adjust = 30) +   stat_boxplot(aes(x = same_species, y = perc_identity, fill = same_species), width = 0.2, outlier.size = 0.1, outliers = TRUE) +   theme_minimal() +   scale_fill_brewer(palette = \"Set1\") +   facet_wrap(~marker) +   theme(legend.position = \"none\") results %>%   filter(query_cover >= min_query_cover & same_species) %>%   group_by(marker) %>%   summarise(     p1 = quantile(perc_identity, 0.01),     p5 = quantile(perc_identity, 0.05),     p10 = quantile(perc_identity, 0.10),     p15 = quantile(perc_identity, 0.15),     p20 = quantile(perc_identity, 0.20)   ) #> # A tibble: 5 × 6 #>   marker          p1    p5   p10   p15   p20 #>   <chr>        <dbl> <dbl> <dbl> <dbl> <dbl> #> 1 12s_mifish    86.8  94.6  97.7  98.8  99.4 #> 2 12s_mimammal  86.5  94.5  97.7  98.8  99.4 #> 3 12s_teleo     87.1  95.1  98.2  98.4  99.4 #> 4 16s           86.4  92.7  96.1  97.7  98.5 #> 5 coi           80.9  88.8  94.8  97.4  98.4"},{"path":"https://iobis.github.io/ednagaps/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Pieter Provoost. Maintainer, author.","code":""},{"path":"https://iobis.github.io/ednagaps/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Provoost P (2024). ednagaps: eDNA reference database gap analysis. R package version 0.0.1, https://iobis.github.io/ednagaps/.","code":"@Manual{,   title = {ednagaps: eDNA reference database gap analysis},   author = {Pieter Provoost},   year = {2024},   note = {R package version 0.0.1},   url = {https://iobis.github.io/ednagaps/}, }"},{"path":"https://iobis.github.io/ednagaps/index.html","id":"ednagaps","dir":"","previous_headings":"","what":"eDNA reference database gap analysis","title":"eDNA reference database gap analysis","text":"R package eDNA reference database gap analysis. Check global gap analysis article example usage. eDNA Expeditions project funded Flanders UNESCO Science Trust Fund (FUST).","code":""},{"path":"https://iobis.github.io/ednagaps/reference/add_groups.html","id":null,"dir":"Reference","previous_headings":"","what":"Add higher level groups to a taxonomy table. — add_groups","title":"Add higher level groups to a taxonomy table. — add_groups","text":"Add higher level groups taxonomy table.","code":""},{"path":"https://iobis.github.io/ednagaps/reference/add_groups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add higher level groups to a taxonomy table. — add_groups","text":"","code":"add_groups(x)"},{"path":"https://iobis.github.io/ednagaps/reference/add_groups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add higher level groups to a taxonomy table. — add_groups","text":"x taxonomy table.","code":""},{"path":"https://iobis.github.io/ednagaps/reference/add_groups.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add higher level groups to a taxonomy table. — add_groups","text":"taxonomy table higher level groups added.","code":""},{"path":[]},{"path":"https://iobis.github.io/ednagaps/reference/generate_reference_species.html","id":null,"dir":"Reference","previous_headings":"","what":"Create species lists with WoRMS accepted names for a set of reference databases.\nResults are written to a compressed CSV file in the workspace. — generate_reference_species","title":"Create species lists with WoRMS accepted names for a set of reference databases.\nResults are written to a compressed CSV file in the workspace. — generate_reference_species","text":"Create species lists WoRMS accepted names set reference databases. Results written compressed CSV file workspace.","code":""},{"path":"https://iobis.github.io/ednagaps/reference/generate_reference_species.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create species lists with WoRMS accepted names for a set of reference databases.\nResults are written to a compressed CSV file in the workspace. — generate_reference_species","text":"","code":"generate_reference_species(   reference_databases,   workspace = system.file(\"data\", package = \"ednagaps\") )"},{"path":"https://iobis.github.io/ednagaps/reference/generate_reference_species.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create species lists with WoRMS accepted names for a set of reference databases.\nResults are written to a compressed CSV file in the workspace. — generate_reference_species","text":"reference_databases named list reference databases, least taxon table paths. workspace Path workspace.","code":""},{"path":"https://iobis.github.io/ednagaps/reference/generate_reference_species.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create species lists with WoRMS accepted names for a set of reference databases.\nResults are written to a compressed CSV file in the workspace. — generate_reference_species","text":"Output path.","code":""},{"path":"https://iobis.github.io/ednagaps/reference/get_marker_species_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a list of species names as provided from a reference database. — get_marker_species_list","title":"Get a list of species names as provided from a reference database. — get_marker_species_list","text":"Get list species names provided reference database.","code":""},{"path":"https://iobis.github.io/ednagaps/reference/get_marker_species_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a list of species names as provided from a reference database. — get_marker_species_list","text":"","code":"get_marker_species_list(reference_database_path, marker)"},{"path":"https://iobis.github.io/ednagaps/reference/get_marker_species_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a list of species names as provided from a reference database. — get_marker_species_list","text":"marker Marker name. reference_database_taxa_path Reference database taxon table path.","code":""},{"path":"https://iobis.github.io/ednagaps/reference/groups.html","id":null,"dir":"Reference","previous_headings":"","what":"Higher level groups for analysis purposes. — groups","title":"Higher level groups for analysis purposes. — groups","text":"Higher level groups analysis purposes.","code":""},{"path":"https://iobis.github.io/ednagaps/reference/groups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Higher level groups for analysis purposes. — groups","text":"","code":"groups"},{"path":"https://iobis.github.io/ednagaps/reference/groups.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Higher level groups for analysis purposes. — groups","text":"object class list length 19.","code":""},{"path":"https://iobis.github.io/ednagaps/reference/read_reference_species.html","id":null,"dir":"Reference","previous_headings":"","what":"Read species lists with WoRMS accepted names from the compressed CSV file in the workspace. — read_reference_species","title":"Read species lists with WoRMS accepted names from the compressed CSV file in the workspace. — read_reference_species","text":"Read species lists WoRMS accepted names compressed CSV file workspace.","code":""},{"path":"https://iobis.github.io/ednagaps/reference/read_reference_species.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read species lists with WoRMS accepted names from the compressed CSV file in the workspace. — read_reference_species","text":"","code":"read_reference_species(workspace = system.file(\"data\", package = \"ednagaps\"))"},{"path":"https://iobis.github.io/ednagaps/reference/read_reference_species.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read species lists with WoRMS accepted names from the compressed CSV file in the workspace. — read_reference_species","text":"workspace Path workspace.","code":""},{"path":"https://iobis.github.io/ednagaps/reference/worms_for_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Match names with WoRMS. — worms_for_names","title":"Match names with WoRMS. — worms_for_names","text":"Match names WoRMS.","code":""},{"path":"https://iobis.github.io/ednagaps/reference/worms_for_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Match names with WoRMS. — worms_for_names","text":"","code":"worms_for_names(...)"},{"path":"https://iobis.github.io/ednagaps/reference/worms_for_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Match names with WoRMS. — worms_for_names","text":"x character vector names.","code":""},{"path":"https://iobis.github.io/ednagaps/reference/worms_for_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Match names with WoRMS. — worms_for_names","text":"data frame input names WoRMS matches.","code":""}]
